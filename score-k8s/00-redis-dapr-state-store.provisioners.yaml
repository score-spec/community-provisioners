- uri: template://default-provisioners/redis
  type: dapr-state-store
  class: default
  init: |
    randomServiceName: redis-{{ randAlphaNum 6 | lower }}
    randomPassword: {{ randAlphaNum 16 | quote }}
    port: 6379
  state: |
    service: {{ dig "service" .Init.randomServiceName .State | quote }}
    username: default
    password: {{ dig "password" .Init.randomPassword .State | quote }}
  outputs: |
    name: {{ .State.service }}
  manifests: |
    - apiVersion: v1
      kind: Secret
      metadata:
        name: {{ .State.service }}
        annotations:
          k8s.score.dev/source-workload: {{ .SourceWorkload }}
          k8s.score.dev/resource-uid: {{ .Uid }}
          k8s.score.dev/resource-guid: {{ .Guid }}
      data:
        password: {{ .State.password | b64enc }}
        redis.conf: {{ printf "requirepass %s\nport 6379\nsave 60 1\nloglevel warning\n" .State.password | b64enc }}
    - apiVersion: apps/v1
      kind: StatefulSet
      metadata:
        name: {{ .State.service }}
        annotations:
          k8s.score.dev/source-workload: {{ .SourceWorkload }}
          k8s.score.dev/resource-uid: {{ .Uid }}
          k8s.score.dev/resource-guid: {{ .Guid }}
      spec:
        replicas: 1
        serviceName: {{ .State.service }}
        selector:
          matchLabels:
            scoreWorkload: {{ .SourceWorkload }}
            app: {{ .State.service }}
        template:
          metadata:
            labels:
              scoreWorkload: {{ .SourceWorkload }}
              app: {{ .State.service }}
            annotations:
              k8s.score.dev/source-workload: {{ .SourceWorkload }}
              k8s.score.dev/resource-uid: {{ .Uid }}
              k8s.score.dev/resource-guid: {{ .Guid }}
          spec:
            containers:
            - name: redis
              image: redis:7-alpine
              ports:
              - name: redis
                containerPort: {{ .Init.port }}
              volumeMounts:
              - name: redis-data
                mountPath: /data
              - name: config
                mountPath: /usr/local/etc/redis
              readinessProbe:
                exec:
                  command: 
                  - redis-cli
                  - ping
                periodSeconds: 3
            volumes:
            - name: config
              secret:
                secretName: {{ .State.service }}
                items:
                - key: redis.conf
                  path: redis.conf
        volumeClaimTemplates:
        - metadata:
            name: redis-data
            annotations:
              k8s.score.dev/source-workload: {{ .SourceWorkload }}
              k8s.score.dev/resource-uid: {{ .Uid }}
              k8s.score.dev/resource-guid: {{ .Guid }}
          spec:
            accessModes: ["ReadWriteOnce"]
            resources:
              requests:
                storage: 1Gi
    - apiVersion: v1
      kind: Service
      metadata:
        name: {{ .State.service }}
        annotations:
          k8s.score.dev/source-workload: {{ .SourceWorkload }}
          k8s.score.dev/resource-uid: {{ .Uid }}
          k8s.score.dev/resource-guid: {{ .Guid }}
      spec:
        selector:
          scoreWorkload: {{ .SourceWorkload }}
          app: {{ .State.service }}
        type: ClusterIP
        ports:
        - port: {{ .Init.port }}
          targetPort: {{ .Init.port }}
    - apiVersion: dapr.io/v1alpha1
      kind: Component
      metadata:
        name: {{ .State.service }}
      spec:
        type: state.redis
        version: v1
        metadata:
        - name: redisHost
          value: {{ .State.service }}:{{ .Init.port }}
        - name: redisPassword
          value: {{ .State.password }}