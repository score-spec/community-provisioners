name: test
permissions:
  contents: read
on:
  pull_request:

jobs:
  test-score-environment:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        score-target:
          - score-compose
          - score-k8s
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: score-spec/setup-score@v2
        with:
          file: ${{ matrix.score-target }}
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate
        run: |
          echo "TEST=test" > .env
          ${{ matrix.score-target }} init --provisioners ${{ matrix.score-target }}/10-env.provisioners.yaml
          ${{ matrix.score-target }} generate examples/environment/score.yaml
  test-score-hpa:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        score-target:
          - score-compose
          - score-k8s
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: score-spec/setup-score@v2
        with:
          file: ${{ matrix.score-target }}
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate
        run: |
          ${{ matrix.score-target }} init --provisioners ${{ matrix.score-target }}/10-hpa.provisioners.yaml
          ${{ matrix.score-target }} generate examples/hpa/score.yaml
  test-score-service:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        score-target:
          - score-compose
          - score-k8s
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: score-spec/setup-score@v2
        with:
          file: ${{ matrix.score-target }}
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate
        run: |
          ${{ matrix.score-target }} init --provisioners ${{ matrix.score-target }}/10-service.provisioners.yaml
          ${{ matrix.score-target }} generate examples/service/score.yaml examples/service/score-dep.yaml
  test-score-redis-dapr-state-store:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        score-target:
          - score-k8s
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: score-spec/setup-score@v2
        with:
          file: ${{ matrix.score-target }}
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate
        run: |
          ${{ matrix.score-target }} init --provisioners ${{ matrix.score-target }}/10-redis-dapr-state-store.provisioners.yaml
          ${{ matrix.score-target }} generate examples/redis-dapr-state-store/score.yaml
  test-score-redis-helm-template:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        score-target:
          - score-k8s
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: score-spec/setup-score@v2
        with:
          file: ${{ matrix.score-target }}
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Generate
        run: |
          export NAMESPACE=default
          ${{ matrix.score-target }} init --provisioners ${{ matrix.score-target }}/10-redis-helm-template.provisioners.yaml
          ${{ matrix.score-target }} generate examples/redis-helm-template/score.yaml
  test-score-redis-helm-upgrade:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        score-target:
          - score-k8s
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: score-spec/setup-score@v2
        with:
          file: ${{ matrix.score-target }}
          version: latest
          token: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare Kind cluster
        run: |
          ./scripts/setup-kind-cluster.sh
      - name: Generate
        run: |
          export NAMESPACE=default
          ${{ matrix.score-target }} init --provisioners ${{ matrix.score-target }}/10-redis-helm-upgrade.provisioners.yaml
          ${{ matrix.score-target }} generate examples/redis-helm-upgrade/score.yaml
